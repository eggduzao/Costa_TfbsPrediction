%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -1 -1 433 433
%%HiResBoundingBox: -1 -1 433 433
%%Creator: PyX 0.12.1
%%CreationDate: Fri Jul 24 21:59:24 2015
%%EndComments
%%BeginProlog
%%BeginResource: BeginEPSF
{
  /b4_Inc_state save def
  /dict_count countdictstack def
  /op_count count 1 sub def
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where
  {pop languagelevel
  1 ne
    {false setstrokeadjust false setoverprint
    } if
  } if
} bind /BeginEPSF exch def
%%EndResource
%%BeginResource: EndEPSF
{
  end
  count op_count sub {pop} repeat
  countdictstack dict_count sub {end} repeat
  b4_Inc_state restore
} bind /EndEPSF exch def
%%EndResource
%%EndProlog
0.566929 setlinewidth
gsave
BeginEPSF
28.9134 14.1732 394.016 68.0315 rectclip
[0.705584 0.000000 0.000000 1.054945 2.912347 -7.507139] concat
%%BeginDocument: /work/eg474423/eg474423_Projects/trunk/TfbsPrediction/Results/StatisticalTests/TFSpecificBias/Pearson/DU_Mcf7/PWM/ER_40min_align.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title:        Sequence Logo: 
%%Creator:      WebLogo 3.4 (2014-06-03)
%%CreationDate: 2015-05-22 10:58:19.729177
%%BoundingBox:  0  0  589  80 
%%Pages: 0
%%DocumentFonts: 
%%EndComments


% ---- VARIABLES ----

/True   true def
/False  false def

/debug              False        def

/logo_height        80  def
/logo_width         589  def
/logo_title         () def
/show_title         False def

/logo_margin        2 def
/xaxis_label_height 6.0 def
/title_height       0 def
/stroke_width       0.5 def
/tic_length         5 def

/lines_per_logo     1 def
/line_width         585.0 def
/line_height        70.0 def
/line_margin_left   30.0 def
/line_margin_right  15.0 def
/line_margin_bottom 12.0 def
/line_margin_top    4 def

/stack_width         10.8 def
/stack_height        54.0 def
/stacks_per_line     50 def
/stack_margin        0.5 def

/show_yaxis             True def      
/show_yaxis_label       True def
/yaxis_label            (bits) def
/yaxis_scale          2.0 def              % height in units 
/yaxis_tic_interval     1.0 def           % in units
/yaxis_minor_tic_interval 0.2 def   % in units

/show_xaxis_label       False def             % True or False
/show_xaxis             True def                   % True or False
/xaxis_label            () def
/xaxis_tic_interval     1 def
/rotate_numbers         False def               % True or False
/number_interval        5 def
/show_ends              True def          
/end_type               (d) def          % d: DNA, p: PROTEIN, -: none

/show_fineprint         True def
/fineprint              (WebLogo 3.4) def
/logo_label             () def

/show_boxes             False def    % True or False
/shrink                 false def    % True or False
/shrink_fraction        0.5 def               

/show_errorbars         True def      % True or False
/errorbar_fraction      0.9 def
/errorbar_width_fraction  0.25 def
/errorbar_gray          0.75 def

/fontsize               10 def
/small_fontsize         6 def
/title_fontsize         12 def
/number_fontsize        8 def


/UseCIEColor true def       % Fix for issue 4
/default_color [ 0.0 0.0 0.0 ] def 
/color_dict << 
  (G) [ 1.0 0.647058823529 0.0 ]
  (T) [ 1.0 0.0 0.0 ]
  (U) [ 1.0 0.0 0.0 ]
  (C) [ 0.0 0.0 1.0 ]
  (A) [ 0.0 0.501960784314 0.0 ]
>> def



% ---- DERIVED PARAMETERS ----

/char_width stack_width 2 stack_margin mul sub def
/char_width2 char_width 2 div def
/char_width4 char_width 4 div def

% movements to place 5'/N and 3'/C symbols
/leftEndDeltaX  fontsize neg         def
/leftEndDeltaY  fontsize 1.25 mul neg def
/rightEndDeltaX fontsize 0.25 mul     def
/rightEndDeltaY leftEndDeltaY        def


% ---- PROCEDURES ----


/SetTitleFont {/ArialMT findfont title_fontsize scalefont setfont} bind def
/SetLogoFont  {/Arial-BoldMT findfont char_width  scalefont setfont} bind def
/SetStringFont{/ArialMT findfont fontsize scalefont setfont} bind def
/SetPrimeFont {/Symbol findfont fontsize scalefont setfont} bind def
/SetSmallFont {/ArialMT findfont small_fontsize scalefont setfont} bind def
/SetNumberFont {/ArialMT findfont number_fontsize scalefont setfont} bind def

/DrawBox { % width height 
    /hh exch def
    /ww exch def
    gsave
        0.2 setlinewidth
        %0.5 setgray
        
        %0 0 moveto 
        hh 0 rlineto
        0 ww rlineto
        hh neg 0 rlineto
        0 ww neg rlineto
        stroke
    grestore
} bind def


/StartLogo { 
  %save 
  gsave 

  
  debug { 
    logo_margin logo_margin moveto
    logo_height logo_margin 2 mul sub
    logo_width logo_margin 2 mul sub
    DrawBox } if
    
  show_title { DrawTitle } if
  show_xaxis_label { DrawXaxisLable } if
  show_fineprint { DrawFineprint } if
  DrawLogoLabel
  
  
  MoveToFirstLine
} bind def


/DrawLogoLabel {
  gsave 
    SetTitleFont
    
    logo_margin
    logo_height title_fontsize sub logo_margin sub
    moveto
    
    debug { title_fontsize logo_label stringwidth pop DrawBox } if
    0 title_fontsize 4 div rmoveto % Move up to baseline (approximatly)
    logo_label show
    
  grestore
} bind def

/DrawTitle {
  gsave 
    SetTitleFont
    
    logo_width 2 div logo_title stringwidth pop 2 div sub 
    logo_height title_fontsize sub logo_margin sub
    moveto
    
    debug { title_fontsize logo_title stringwidth pop DrawBox } if
    
    0 title_fontsize 4 div rmoveto % Move up to baseline (approximatly)
    logo_title show
    
  grestore
} bind def

/DrawXaxisLable {
  % Print X-axis label, bottom center
  gsave
    SetStringFont

    logo_width 2 div xaxis_label stringwidth pop 2 div sub
    xaxis_label_height logo_margin add fontsize sub
    moveto
    %fontsize 3 div
    
    debug { fontsize xaxis_label stringwidth pop DrawBox } if

    xaxis_label show

  grestore
} bind def


/DrawFineprint {
    gsave
    
    SetSmallFont

    logo_width fineprint stringwidth pop sub 
        logo_margin sub line_margin_right sub
    logo_margin 
    moveto
    
    debug { small_fontsize fineprint stringwidth pop DrawBox } if
        
    fineprint show
    grestore
} bind def

/MoveToFirstLine {
    logo_margin 
    logo_height logo_margin sub title_height sub line_height sub
    moveto
} bind def

/EndLogo { 
  grestore 
  %showpage 
  %restore 
} bind def


/StartLine{ 
    gsave 
  
    % Draw outer box
    debug { line_height line_width DrawBox } if  

    % Move to lower left corner of content area
    line_margin_left line_margin_bottom rmoveto

    % Draw inner content box
    debug { 
        line_height line_margin_bottom sub line_margin_top sub
        line_width line_margin_left sub line_margin_right sub
        DrawBox
    } if  
  
    show_yaxis { DrawYaxis } if
    show_xaxis { DrawLeftEnd } if
    
} bind def

/EndLine{ 
    show_xaxis { DrawRightEnd } if
    grestore 
    0 line_height neg rmoveto 
} bind def


/DrawYaxis {
  gsave    
    stack_margin neg 0 translate
    DrawYaxisBar
    DrawYaxisLabel
  grestore
} bind def


/DrawYaxisBar { 
  gsave  
    stack_margin neg 0 rmoveto
    
    SetNumberFont
    stroke_width setlinewidth
    
    /str 10 string def % string to hold number  
    /smallgap stack_margin  def

    % Draw first tic and bar
    gsave    
      tic_length neg 0 rmoveto 
      tic_length 0 rlineto 
      0 stack_height rlineto
      stroke
    grestore

    % Draw the tics
    % initial increment limit proc for
    0 yaxis_tic_interval yaxis_scale abs 
    {/loopnumber exch def

      % convert the number coming from the loop to a string
      % and find its width
      loopnumber 10 str cvrs
      /stringnumber exch def % string representing the number

      stringnumber stringwidth pop
      /numberwidth exch def % width of number to show

      /halfnumberheight
         stringnumber CharBoxHeight 2 div
      def

      gsave
        numberwidth % move back width of number
        neg loopnumber stack_height yaxis_scale div mul % shift on y axis
        halfnumberheight sub % down half the digit
        rmoveto % move back the width of the string

        tic_length neg smallgap sub % Move back a bit more  
        0 rmoveto % move back the width of the tic  

        stringnumber show
        smallgap 0 rmoveto % Make a small gap  

        % now show the tic mark
        0 halfnumberheight rmoveto % shift up again
        tic_length 0 rlineto
        stroke
     grestore
    } for
    
    % Draw the minor tics
    % initial increment limit proc for
    0 yaxis_minor_tic_interval yaxis_scale abs 
    {/loopnumber2 exch def
      gsave
        0
        loopnumber2 stack_height yaxis_scale div mul 
        rmoveto 

        tic_length 2 div neg 0 rlineto
        stroke
     grestore
    } for    
    
  grestore
} bind def

/DrawYaxisLabel {
  gsave
    SetStringFont

    % How far we move left depends on the size of
    % the tic labels.
    /str 10 string def % string to hold number  
    yaxis_scale yaxis_tic_interval div cvi yaxis_tic_interval mul 
    str cvs stringwidth pop
    tic_length 1.25 mul  add neg  

    stack_height
    yaxis_label stringwidth pop
    sub 2 div

    rmoveto
    90 rotate
    
    yaxis_label show
  grestore
} bind def


%Take a single character and return the bounding box
/CharBox { % <char> CharBox <lx> <ly> <ux> <uy>
  gsave
    newpath
    0 0 moveto
    % take the character off the stack and use it here:
    true charpath 
    flattenpath 
    pathbbox % compute bounding box of 1 pt. char => lx ly ux uy
    % the path is here, but toss it away ...
  grestore
} bind def


% The height of a characters bounding box
/CharBoxHeight { % <char> CharBoxHeight <num>
  CharBox
  exch pop sub neg exch pop
} bind def


% The width of a characters bounding box
/CharBoxWidth { % <char> CharBoxHeight <num>
  CharBox
  pop exch pop sub neg 
} bind def


/DrawLeftEnd {
  gsave
    SetStringFont
    leftEndDeltaX leftEndDeltaY rmoveto
    
    show_ends {
        debug { leftEndDeltaY neg leftEndDeltaX neg DrawBox } if
        end_type (d) eq {(5) show DrawPrime} if
        end_type (p) eq {(N) show} if
    } if
  grestore
} bind def

/DrawRightEnd { 
  gsave
    SetStringFont
    rightEndDeltaX rightEndDeltaY rmoveto
    
    show_ends {
        debug { rightEndDeltaY neg leftEndDeltaX neg  DrawBox } if
        end_type (d) eq {(3) show DrawPrime} if
        end_type (p) eq {(C) show} if
    } if
  grestore
} bind def

/DrawPrime {
  gsave
    SetPrimeFont
    (\242) show 
  grestore
} bind def


/StartStack {  % <stackNumber> startstack
  show_xaxis {DrawNumber}{pop} ifelse
  gsave
  debug { stack_height stack_width DrawBox } if
    
} bind def

/EndStack {
  grestore
  stack_width 0 rmoveto
} bind def


/DrawNumber { % number MakeNumber
    /n exch def
    
    
  gsave
    %0 stack_margin neg rmoveto
    stroke_width setlinewidth
    stack_width  0 rlineto
    stack_width 2 div neg 0 rmoveto
    
    n () eq 
    {  0 tic_length 4 div neg rlineto  } 
    { 0 tic_length 2 div neg rlineto } 
    ifelse

    stroke
  grestore   



  gsave
    n
    SetNumberFont
    stack_width 2 div tic_length 2 div neg rmoveto 

    rotate_numbers {
        90 rotate     
        dup stringwidth pop neg % find the length of the number
        stack_margin sub        % Move down a bit
        (0) CharBoxHeight 2 div neg % left half height of numbers
        rmoveto 
        show
    } {
        dup stringwidth pop neg 2 div number_fontsize neg  rmoveto
        show
    } ifelse
    
    

  grestore
} bind def



% Draw a character whose height is proportional to symbol bits
/ShowSymbol{ % interval character ShowSymbol
    /char exch def
    /interval exch def
    /fraction_width exch def
    
    /char_height 
       interval yaxis_scale div stack_height mul
       stack_margin sub
       dup 
       % if char_height is negative or very small replace with zero 
       % BUG FIX: This used to be '0.0 gt' but it seems that DrawHeight
       % has a finite, non-zero minimum, which results in a rangecheck error
       0.01 gt {}{pop 0.0} ifelse 
    def 

    char_height 0.0 gt {
        show_boxes {
            gsave
                /ww char_height stack_margin add def
                /hh stack_width def
                stroke_width setlinewidth
                hh 0 rlineto
                0 ww rlineto
                hh neg 0 rlineto
                0 ww neg rlineto
                stroke
            grestore     
        } if

        gsave
            stack_margin stack_margin rmoveto
            debug { char_height char_width DrawBox } if
            1 fraction_width sub char_width mul 2 div  0 rmoveto
            fraction_width char_width mul char_height char DrawChar
        grestore
        
    } if
    0 interval yaxis_scale div stack_height mul rmoveto
} bind def


/DrawChar { % <width> <height> <char> ShowChar
    /tc exch def    % The character
    /ysize exch def % the y size of the character
    /xsize exch def % the x size of the character
    /xmulfactor 1 def 
    /ymulfactor 1 def
    
    gsave
        SetLogoFont    
        tc SetColor

        % IReplacementHack
        % Deal with the lack of bars on the letter 'I' in Arial and Helvetica
        % by replacing with 'I' from Courier.
        tc (I) eq {
            /Courier findfont char_width  scalefont setfont    
        } if


        shrink {
            xsize 1 shrink_fraction sub 2 div mul
            ysize 1 shrink_fraction sub 2 div mul rmoveto 
            shrink_fraction shrink_fraction scale
        } if
        
        % Calculate the font scaling factors
        % Loop twice to catch small correction due to first scaling
        2 {
            gsave
            xmulfactor ymulfactor scale
      
            ysize % desired size of character in points
            tc CharBoxHeight 
            dup 0.0 ne {
                div % factor by which to scale up the character
                /ymulfactor exch def
            } {pop pop} ifelse

            xsize % desired size of character in points
            tc CharBoxWidth  
            dup 0.0 ne {
                div % factor by which to scale up the character
                /xmulfactor exch def
            } {pop pop} ifelse
            grestore
        } repeat


  
        % Draw the character
        xmulfactor ymulfactor scale
        % Move lower left corner of character to start point
        tc CharBox pop pop % llx lly : Lower left corner
        exch neg exch neg
        rmoveto
        
        tc show    

    grestore
} bind def

/SetColor{ % <char> SetColor
  dup color_dict exch known {
    color_dict exch get aload pop setrgbcolor
  } {
    pop
    default_color aload pop setrgbcolor
  } ifelse 
} bind def


/DrawErrorbar{ % interval_down interval_up DrawErrorbar
    
    gsave
    /points_per_unit stack_height yaxis_scale div def 
    /height_up   exch points_per_unit mul def 
    /height_down exch points_per_unit mul def
    
    show_errorbars {
    
    stroke_width setlinewidth
    errorbar_gray setgray     
    stack_width 2 div 0 rmoveto
    
    /errorbar_width char_width errorbar_width_fraction mul def
    /errorbar_width2 errorbar_width 2 div def
    
    gsave 
        0 height_down neg rmoveto
        errorbar_width2 neg 0 rlineto
        errorbar_width 0 rlineto
        errorbar_width2 neg 0 rlineto
        0 height_down errorbar_fraction mul rlineto 
        stroke
    grestore

    gsave 
        0 height_up  rmoveto
        errorbar_width2 neg 0 rlineto
        errorbar_width 0 rlineto
        errorbar_width2 neg 0 rlineto
        0 height_up neg errorbar_fraction mul rlineto 
        stroke
    grestore
    } if
           
    grestore
    
} bind def

/DrawErrorbarFirst{ % interval_down interval_up center DrawErrorbarFirst
    gsave
    /points_per_unit stack_height yaxis_scale div def 
    /center   exch points_per_unit mul def 

    0 center rmoveto
    DrawErrorbar
    grestore
} bind def

%%EndProlog

%%Page: 1 1

% Example Data
%StartLogo
%    StartLine
%        (1) StartStack
%            1.2 (C) ShowSymbol
%            2.2 (I) ShowSymbol
%            0.5 0.5 DrawErrorbar
%        EndStack
%        (2) StartStack
%            0.5 (I) ShowSymbol
%            0.9 (L) ShowSymbol
%            1.0 (G) ShowSymbol
%            
%            0.5 0.5 DrawErrorbar        
%        EndStack
%        (234) StartStack
%        EndStack
%        (235) StartStack
%        EndStack
%    EndLine
%EndLogo

StartLogo

StartLine
() StartStack
 1.000000 0.000456 (T) ShowSymbol
 1.000000 0.000482 (G) ShowSymbol
 1.000000 0.000500 (C) ShowSymbol
 1.000000 0.000521 (A) ShowSymbol
 0.001236 0.001842 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000307 (T) ShowSymbol
 1.000000 0.000309 (C) ShowSymbol
 1.000000 0.000318 (A) ShowSymbol
 1.000000 0.000337 (G) ShowSymbol
 0.000922 0.001507 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000421 (T) ShowSymbol
 1.000000 0.000432 (A) ShowSymbol
 1.000000 0.000466 (C) ShowSymbol
 1.000000 0.000468 (G) ShowSymbol
 0.001163 0.001764 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000222 (T) ShowSymbol
 1.000000 0.000231 (A) ShowSymbol
 1.000000 0.000233 (G) ShowSymbol
 1.000000 0.000242 (C) ShowSymbol
 0.000730 0.001281 DrawErrorbar
EndStack

(5) StartStack
 1.000000 0.000361 (A) ShowSymbol
 1.000000 0.000372 (T) ShowSymbol
 1.000000 0.000381 (C) ShowSymbol
 1.000000 0.000404 (G) ShowSymbol
 0.001043 0.001639 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000604 (T) ShowSymbol
 1.000000 0.000641 (A) ShowSymbol
 1.000000 0.000647 (C) ShowSymbol
 1.000000 0.000708 (G) ShowSymbol
 0.001491 0.002115 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000342 (A) ShowSymbol
 1.000000 0.000348 (T) ShowSymbol
 1.000000 0.000367 (C) ShowSymbol
 1.000000 0.000379 (G) ShowSymbol
 0.001003 0.001592 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000424 (T) ShowSymbol
 1.000000 0.000426 (A) ShowSymbol
 1.000000 0.000439 (G) ShowSymbol
 1.000000 0.000475 (C) ShowSymbol
 0.001158 0.001767 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000320 (G) ShowSymbol
 1.000000 0.000323 (A) ShowSymbol
 1.000000 0.000336 (T) ShowSymbol
 1.000000 0.000352 (C) ShowSymbol
 0.000951 0.001538 DrawErrorbar
EndStack

(10) StartStack
 1.000000 0.000670 (A) ShowSymbol
 1.000000 0.000694 (T) ShowSymbol
 1.000000 0.000711 (G) ShowSymbol
 1.000000 0.000786 (C) ShowSymbol
 0.001587 0.002218 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000711 (G) ShowSymbol
 1.000000 0.000722 (T) ShowSymbol
 1.000000 0.000802 (A) ShowSymbol
 1.000000 0.000819 (C) ShowSymbol
 0.001975 0.001975 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000919 (C) ShowSymbol
 1.000000 0.000993 (T) ShowSymbol
 1.000000 0.001012 (G) ShowSymbol
 1.000000 0.001124 (A) ShowSymbol
 0.002294 0.002294 DrawErrorbar
EndStack

() StartStack
 1.000000 0.004677 (T) ShowSymbol
 1.000000 0.005662 (C) ShowSymbol
 1.000000 0.005996 (A) ShowSymbol
 1.000000 0.007736 (G) ShowSymbol
 0.005674 0.005674 DrawErrorbar
EndStack

() StartStack
 1.000000 0.005129 (C) ShowSymbol
 1.000000 0.006573 (T) ShowSymbol
 1.000000 0.007094 (A) ShowSymbol
 1.000000 0.008907 (G) ShowSymbol
 0.006025 0.006025 DrawErrorbar
EndStack

(15) StartStack
 1.000000 0.006121 (A) ShowSymbol
 1.000000 0.008217 (T) ShowSymbol
 1.000000 0.010370 (G) ShowSymbol
 1.000000 0.011109 (C) ShowSymbol
 0.006705 0.006705 DrawErrorbar
EndStack

() StartStack
 1.000000 0.019677 (G) ShowSymbol
 1.000000 0.025354 (A) ShowSymbol
 1.000000 0.026947 (T) ShowSymbol
 1.000000 0.056199 (C) ShowSymbol
 0.013329 0.013329 DrawErrorbar
EndStack

() StartStack
 1.000000 0.017278 (G) ShowSymbol
 1.000000 0.017728 (T) ShowSymbol
 1.000000 0.034828 (A) ShowSymbol
 1.000000 0.043160 (C) ShowSymbol
 0.011911 0.011911 DrawErrorbar
EndStack

() StartStack
 1.000000 0.023870 (C) ShowSymbol
 1.000000 0.044509 (T) ShowSymbol
 1.000000 0.163464 (G) ShowSymbol
 1.000000 0.420909 (A) ShowSymbol
 0.024533 0.024533 DrawErrorbar
EndStack

() StartStack
 1.000000 0.003284 (C) ShowSymbol
 1.000000 0.073957 (A) ShowSymbol
 1.000000 0.115647 (T) ShowSymbol
 1.000000 0.990136 (G) ShowSymbol
 0.027979 0.027979 DrawErrorbar
EndStack

(20) StartStack
 1.000000 0.033030 (C) ShowSymbol
 1.000000 0.033913 (T) ShowSymbol
 1.000000 0.052989 (A) ShowSymbol
 1.000000 1.343630 (G) ShowSymbol
 0.029788 0.029788 DrawErrorbar
EndStack

() StartStack
 1.000000 0.043701 (C) ShowSymbol
 1.000000 0.044524 (A) ShowSymbol
 1.000000 0.120240 (G) ShowSymbol
 1.000000 0.473470 (T) ShowSymbol
 0.027047 0.027047 DrawErrorbar
EndStack

() StartStack
 1.000000 0.005228 (A) ShowSymbol
 1.000000 0.067967 (T) ShowSymbol
 1.000000 0.098875 (G) ShowSymbol
 1.000000 1.102083 (C) ShowSymbol
 0.028712 0.028712 DrawErrorbar
EndStack

() StartStack
 1.000000 0.022505 (C) ShowSymbol
 1.000000 0.073985 (G) ShowSymbol
 1.000000 0.089213 (T) ShowSymbol
 1.000000 0.930944 (A) ShowSymbol
 0.030398 0.030398 DrawErrorbar
EndStack

() StartStack
 1.000000 0.021271 (A) ShowSymbol
 1.000000 0.032033 (T) ShowSymbol
 1.000000 0.050115 (G) ShowSymbol
 1.000000 0.086715 (C) ShowSymbol
 0.015428 0.015428 DrawErrorbar
EndStack

(25) StartStack
 1.000000 0.016098 (A) ShowSymbol
 1.000000 0.017429 (G) ShowSymbol
 1.000000 0.017564 (T) ShowSymbol
 1.000000 0.035076 (C) ShowSymbol
 0.011055 0.011055 DrawErrorbar
EndStack

() StartStack
 1.000000 0.017126 (T) ShowSymbol
 1.000000 0.022236 (A) ShowSymbol
 1.000000 0.038190 (G) ShowSymbol
 1.000000 0.051926 (C) ShowSymbol
 0.012709 0.012709 DrawErrorbar
EndStack

() StartStack
 1.000000 0.018845 (G) ShowSymbol
 1.000000 0.057583 (C) ShowSymbol
 1.000000 0.092732 (A) ShowSymbol
 1.000000 1.070154 (T) ShowSymbol
 0.030232 0.030232 DrawErrorbar
EndStack

() StartStack
 1.000000 0.006973 (T) ShowSymbol
 1.000000 0.048988 (C) ShowSymbol
 1.000000 0.067761 (A) ShowSymbol
 1.000000 1.357726 (G) ShowSymbol
 0.028344 0.028344 DrawErrorbar
EndStack

() StartStack
 1.000000 0.037718 (G) ShowSymbol
 1.000000 0.046286 (T) ShowSymbol
 1.000000 0.124782 (C) ShowSymbol
 1.000000 0.425147 (A) ShowSymbol
 0.026058 0.026058 DrawErrorbar
EndStack

(30) StartStack
 1.000000 0.025259 (G) ShowSymbol
 1.000000 0.027985 (A) ShowSymbol
 1.000000 0.059423 (T) ShowSymbol
 1.000000 1.393088 (C) ShowSymbol
 0.029070 0.029070 DrawErrorbar
EndStack

() StartStack
 1.000000 0.001038 (G) ShowSymbol
 1.000000 0.092512 (T) ShowSymbol
 1.000000 0.120409 (A) ShowSymbol
 1.000000 0.861157 (C) ShowSymbol
 0.026546 0.026546 DrawErrorbar
EndStack

() StartStack
 1.000000 0.021906 (G) ShowSymbol
 1.000000 0.033719 (A) ShowSymbol
 1.000000 0.202080 (C) ShowSymbol
 1.000000 0.390547 (T) ShowSymbol
 0.022875 0.022875 DrawErrorbar
EndStack

() StartStack
 1.000000 0.003112 (A) ShowSymbol
 1.000000 0.003581 (C) ShowSymbol
 1.000000 0.004347 (G) ShowSymbol
 1.000000 0.004478 (T) ShowSymbol
 0.004481 0.004481 DrawErrorbar
EndStack

() StartStack
 1.000000 0.006161 (C) ShowSymbol
 1.000000 0.006887 (A) ShowSymbol
 1.000000 0.007045 (T) ShowSymbol
 1.000000 0.010310 (G) ShowSymbol
 0.006494 0.006494 DrawErrorbar
EndStack

(35) StartStack
 1.000000 0.001259 (T) ShowSymbol
 1.000000 0.001435 (A) ShowSymbol
 1.000000 0.001464 (C) ShowSymbol
 1.000000 0.001613 (G) ShowSymbol
 0.002732 0.002732 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000721 (G) ShowSymbol
 1.000000 0.000744 (A) ShowSymbol
 1.000000 0.000800 (T) ShowSymbol
 1.000000 0.000846 (C) ShowSymbol
 0.001998 0.001998 DrawErrorbar
EndStack

() StartStack
 1.000000 0.001297 (A) ShowSymbol
 1.000000 0.001362 (T) ShowSymbol
 1.000000 0.001459 (G) ShowSymbol
 1.000000 0.001632 (C) ShowSymbol
 0.002754 0.002754 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000464 (G) ShowSymbol
 1.000000 0.000481 (A) ShowSymbol
 1.000000 0.000485 (C) ShowSymbol
 1.000000 0.000529 (T) ShowSymbol
 0.001242 0.001856 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000677 (A) ShowSymbol
 1.000000 0.000721 (C) ShowSymbol
 1.000000 0.000783 (T) ShowSymbol
 1.000000 0.000785 (G) ShowSymbol
 0.001610 0.002229 DrawErrorbar
EndStack

(40) StartStack
 1.000000 0.000528 (A) ShowSymbol
 1.000000 0.000535 (T) ShowSymbol
 1.000000 0.000588 (G) ShowSymbol
 1.000000 0.000592 (C) ShowSymbol
 0.001351 0.001964 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000066 (G) ShowSymbol
 1.000000 0.000066 (T) ShowSymbol
 1.000000 0.000067 (C) ShowSymbol
 1.000000 0.000067 (A) ShowSymbol
 0.000247 0.000562 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000268 (T) ShowSymbol
 1.000000 0.000274 (A) ShowSymbol
 1.000000 0.000289 (G) ShowSymbol
 1.000000 0.000291 (C) ShowSymbol
 0.000840 0.001408 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000340 (A) ShowSymbol
 1.000000 0.000343 (T) ShowSymbol
 1.000000 0.000356 (G) ShowSymbol
 1.000000 0.000376 (C) ShowSymbol
 0.000994 0.001586 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000386 (A) ShowSymbol
 1.000000 0.000392 (G) ShowSymbol
 1.000000 0.000402 (T) ShowSymbol
 1.000000 0.000432 (C) ShowSymbol
 0.001089 0.001691 DrawErrorbar
EndStack

(45) StartStack
 1.000000 0.000200 (T) ShowSymbol
 1.000000 0.000201 (A) ShowSymbol
 1.000000 0.000204 (G) ShowSymbol
 1.000000 0.000215 (C) ShowSymbol
 0.000665 0.001207 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000103 (T) ShowSymbol
 1.000000 0.000104 (A) ShowSymbol
 1.000000 0.000106 (G) ShowSymbol
 1.000000 0.000107 (C) ShowSymbol
 0.000379 0.000810 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000360 (A) ShowSymbol
 1.000000 0.000372 (T) ShowSymbol
 1.000000 0.000377 (G) ShowSymbol
 1.000000 0.000403 (C) ShowSymbol
 0.001041 0.001637 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000360 (A) ShowSymbol
 1.000000 0.000372 (T) ShowSymbol
 1.000000 0.000377 (G) ShowSymbol
 1.000000 0.000403 (C) ShowSymbol
 0.001041 0.001637 DrawErrorbar
EndStack

() StartStack
 1.000000 0.000360 (A) ShowSymbol
 1.000000 0.000372 (T) ShowSymbol
 1.000000 0.000377 (G) ShowSymbol
 1.000000 0.000403 (C) ShowSymbol
 0.001041 0.001637 DrawErrorbar
EndStack

(50) StartStack
 1.000000 0.000360 (A) ShowSymbol
 1.000000 0.000372 (T) ShowSymbol
 1.000000 0.000377 (G) ShowSymbol
 1.000000 0.000403 (C) ShowSymbol
 0.001041 0.001637 DrawErrorbar
EndStack

EndLine

EndLogo


%%EOF
%%EndDocument
EndEPSF
BeginEPSF
0 0 432 432 rectclip
[1.000000 0.000000 0.000000 1.000000 0.000000 0.000000] concat
%%BeginDocument: /work/eg474423/eg474423_Projects/trunk/TfbsPrediction/Results/StatisticalTests/NatMetLineGraphs/Figure/ER_40min.eps
%!PS-Adobe-3.0
%%DocumentNeededResources: font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Helvetica-BoldOblique
%%+ font Symbol
%%DocumentMedia: special 432 432 0 () ()
%%Title: R Graphics Output
%%Creator: R Software
%%Pages: (atend)
%%BoundingBox: 0 0 432 432
%%EndComments
%%BeginProlog
/bp  { gs sRGB gs } def
% begin .ps.prolog
/gs  { gsave } bind def
/gr  { grestore } bind def
/ep  { showpage gr gr } bind def
/m   { moveto } bind def
/l  { rlineto } bind def
/np  { newpath } bind def
/cp  { closepath } bind def
/f   { fill } bind def
/o   { stroke } bind def
/c   { newpath 0 360 arc } bind def
/r   { 4 2 roll moveto 1 copy 3 -1 roll exch 0 exch rlineto 0 rlineto -1 mul 0 exch rlineto closepath } bind def
/p1  { stroke } bind def
/p2  { gsave bg fill grestore newpath } bind def
/p3  { gsave bg fill grestore stroke } bind def
/p6  { gsave bg eofill grestore newpath } bind def
/p7  { gsave bg eofill grestore stroke } bind def
/t   { 5 -2 roll moveto gsave rotate
       1 index stringwidth pop
       mul neg 0 rmoveto show grestore } bind def
/ta  { 4 -2 roll moveto gsave rotate show } bind def
/tb  { 2 -1 roll 0 rmoveto show } bind def
/cl  { grestore gsave newpath 3 index 3 index moveto 1 index
       4 -1 roll lineto  exch 1 index lineto lineto
       closepath clip newpath } bind def
/rgb { setrgbcolor } bind def
/s   { scalefont setfont } bind def
% end   .ps.prolog
/sRGB { [ /CIEBasedABC
          << /DecodeLMN
               [ { dup 0.03928 le
                        {12.92321 div}
                        {0.055 add 1.055 div 2.4 exp }
                     ifelse
                 } bind dup dup
               ]
             /MatrixLMN [0.412457 0.212673 0.019334
                         0.357576 0.715152 0.119192
                         0.180437 0.072175 0.950301]
             /WhitePoint [0.9505 1.0 1.0890]
           >>
         ] setcolorspace } bind def
/srgb { setcolor } bind def
%%IncludeResource: font Helvetica
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font1 exch definefont pop
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font2 exch definefont pop
%%IncludeResource: font Helvetica-Oblique
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font3 exch definefont pop
%%IncludeResource: font Helvetica-BoldOblique
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font4 exch definefont pop
%%IncludeResource: font Symbol
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
  end
/Font5 exch definefont pop
%%EndProlog
%%Page: 1 1
bp
0.00 216.00 432.00 432.00 cl
1 0 0 srgb
1.50 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
np
29.33 282.00 m
7.62 4.95 l
7.62 1.11 l
7.62 0.92 l
7.62 0.51 l
7.62 -1.91 l
7.62 0.53 l
7.62 2.06 l
7.62 -9.25 l
7.61 4.18 l
7.62 4.70 l
7.62 -0.90 l
7.62 -3.40 l
7.62 -3.66 l
7.62 9.42 l
7.62 25.98 l
7.62 27.76 l
7.62 -67.34 l
7.62 -12.21 l
7.62 27.90 l
7.61 25.11 l
7.62 95.76 l
7.62 -156.03 l
7.62 2.71 l
7.62 22.27 l
7.62 24.03 l
7.62 34.24 l
7.62 -82.84 l
7.62 -21.35 l
7.62 82.59 l
7.61 19.74 l
7.62 -30.44 l
7.62 -32.12 l
7.62 -31.69 l
7.62 70.52 l
7.62 -5.55 l
7.62 -9.70 l
7.62 -14.05 l
7.62 0.20 l
7.62 -1.67 l
7.62 8.46 l
7.61 4.66 l
7.62 -6.00 l
7.62 2.23 l
7.62 -2.56 l
7.62 1.62 l
7.62 0.96 l
7.62 -0.44 l
7.62 1.68 l
7.62 -0.53 l
o
0 0 1 srgb
np
29.33 302.04 m
7.62 0.71 l
7.62 0.18 l
7.62 0.80 l
7.62 -4.39 l
7.62 2.73 l
7.62 -6.13 l
7.62 -4.41 l
7.62 6.77 l
7.61 -0.08 l
7.62 -0.23 l
7.62 -2.41 l
7.62 -4.15 l
7.62 20.40 l
7.62 0.85 l
7.62 5.99 l
7.62 -68.79 l
7.62 28.93 l
7.62 37.08 l
7.62 35.45 l
7.61 -24.51 l
7.62 -86.63 l
7.62 18.20 l
7.62 84.15 l
7.62 -29.43 l
7.62 -23.90 l
7.62 -24.63 l
7.62 -1.92 l
7.62 152.93 l
7.62 -88.15 l
7.61 -28.13 l
7.62 -29.68 l
7.62 16.80 l
7.62 64.96 l
7.62 -27.89 l
7.62 -21.89 l
7.62 -12.88 l
7.62 3.44 l
7.62 -2.59 l
7.62 8.84 l
7.62 0.11 l
7.61 -3.73 l
7.62 -0.22 l
7.62 3.51 l
7.62 0.57 l
7.62 -3.40 l
7.62 -1.09 l
7.62 -3.23 l
7.62 4.72 l
7.62 -1.39 l
o
0.00 0.00 432.00 432.00 cl
0 0 0 srgb
0.75 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
np
67.43 230.40 m
304.76 0 l
o
np
67.43 230.40 m
0 -7.20 l
o
np
143.62 230.40 m
0 -7.20 l
o
np
219.81 230.40 m
0 -7.20 l
o
np
296.00 230.40 m
0 -7.20 l
o
np
372.19 230.40 m
0 -7.20 l
o
np
14.40 237.33 m
0 173.34 l
o
np
14.40 237.33 m
-7.20 0 l
o
np
14.40 410.67 m
-7.20 0 l
o
0.00 216.00 432.00 432.00 cl
0.8275 0.8275 0.8275 srgb
0.75 setlinewidth
[ 2.25 3.75] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
np
67.43 237.33 m
0 173.34 l
o
np
143.62 237.33 m
0 173.34 l
o
np
219.81 237.33 m
0 173.34 l
o
np
296.00 237.33 m
0 173.34 l
o
np
372.19 237.33 m
0 173.34 l
o
np
29.33 237.33 m
380.96 0 l
o
np
29.33 324.00 m
380.96 0 l
o
np
29.33 410.67 m
380.96 0 l
o
0.00 0.00 432.00 216.00 cl
0.00 0.00 432.00 216.00 cl
1 0.4667 0.4667 srgb
1.50 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
np
29.33 119.49 m
7.62 7.59 l
7.62 -1.84 l
7.62 -36.32 l
7.62 -12.41 l
7.62 59.31 l
7.62 -25.52 l
7.62 67.13 l
7.62 -37.94 l
7.61 -48.50 l
7.62 8.50 l
7.62 -8.27 l
7.62 45.06 l
7.62 -31.27 l
7.62 -15.40 l
7.62 40.92 l
7.62 -9.20 l
7.62 26.44 l
7.62 -78.62 l
7.62 31.72 l
7.61 14.95 l
7.62 55.40 l
7.62 -88.97 l
7.62 102.07 l
7.62 -79.54 l
7.62 7.82 l
7.62 76.09 l
7.62 -109.43 l
7.62 103.22 l
7.62 -70.34 l
7.61 0.46 l
7.62 -42.07 l
7.62 84.60 l
7.62 -33.11 l
7.62 4.14 l
7.62 -35.86 l
7.62 2.07 l
7.62 38.62 l
7.62 -45.98 l
7.62 -5.98 l
7.62 14.03 l
7.61 58.85 l
7.62 7.35 l
7.62 -20.46 l
7.62 -37.93 l
7.62 -27.81 l
7.62 7.58 l
7.62 41.84 l
7.62 22.53 l
7.62 -42.53 l
o
0.00 0.00 432.00 432.00 cl
0 0 0 srgb
0.75 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
np
67.43 14.40 m
304.76 0 l
o
np
67.43 14.40 m
0 -7.20 l
o
np
143.62 14.40 m
0 -7.20 l
o
np
219.81 14.40 m
0 -7.20 l
o
np
296.00 14.40 m
0 -7.20 l
o
np
372.19 14.40 m
0 -7.20 l
o
np
14.40 69.15 m
0 119.54 l
o
np
14.40 69.15 m
-7.20 0 l
o
np
14.40 188.69 m
-7.20 0 l
o
0.00 0.00 432.00 216.00 cl
0.8275 0.8275 0.8275 srgb
0.75 setlinewidth
[ 2.25 3.75] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
np
67.43 21.33 m
0 167.36 l
o
np
143.62 21.33 m
0 167.36 l
o
np
219.81 21.33 m
0 167.36 l
o
np
296.00 21.33 m
0 167.36 l
o
np
372.19 21.33 m
0 167.36 l
o
np
29.33 69.15 m
380.96 0 l
o
np
29.33 128.92 m
380.96 0 l
o
np
29.33 188.69 m
380.96 0 l
o
0 0.4000 0 srgb
1.50 setlinewidth
[] 0 setdash
np
29.33 169.69 m
7.62 -10.46 l
7.62 14.33 l
7.62 -12.96 l
7.62 -5.06 l
7.62 5.49 l
7.62 -8.79 l
7.62 27.96 l
7.62 -9.55 l
7.61 -24.62 l
7.62 -15.40 l
7.62 12.76 l
7.62 1.64 l
7.62 -41.45 l
7.62 -1.58 l
7.62 -16.83 l
7.62 103.52 l
7.62 -71.74 l
7.62 -47.80 l
7.62 19.90 l
7.61 0.84 l
7.62 58.18 l
7.62 3.79 l
7.62 -46.77 l
7.62 72.43 l
7.62 -13.19 l
7.62 -45.04 l
7.62 30.52 l
7.62 7.92 l
7.62 -47.84 l
7.61 -35.13 l
7.62 8.10 l
7.62 32.69 l
7.62 63.24 l
7.62 -82.24 l
7.62 12.14 l
7.62 5.92 l
7.62 28.35 l
7.62 4.66 l
7.62 1.15 l
7.62 0.85 l
7.61 3.20 l
7.62 29.29 l
7.62 -11.66 l
7.62 -15.52 l
7.62 11.59 l
7.62 8.62 l
7.62 -12.97 l
7.62 4.55 l
7.62 -14.80 l
o
ep
%%Trailer
%%Pages: 1
%%EOF
%%EndDocument
EndEPSF
grestore
showpage
%%Trailer
%%EOF
